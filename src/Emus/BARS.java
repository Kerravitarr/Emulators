package Emus;

import MyMatch.EmusDeff;
import MyMatch.Setings;

/* To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor. */
/**
 *
 * @author Terran
 */
public class BARS extends EmusDeff {
	private static final long serialVersionUID = 1L;

	public BARS(Setings Se) {
		super(Se, "Эмулятор охранно-пожарной системы ОРИОН", 1000);
	}

	@Override
	protected void firstStep() {
	}

	@Override
	protected Controller getController(int numContr, int numPart) {
		return null;
	}

	@Override
	protected void msgIn(String data_S, String string_H) {
		println("Мы получили какое то сообщение!!!");
	};

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	@Override
	protected void newInitComponents() {
	}

	@Override
	protected void newStep() {
		int raC = (int) (Math.random() * 100);
		int raS = (int) (Math.random() * 100);
		int adr = (int) (Math.random() * 0) + 'A';

		byte array1[] = new byte[raC * 4 + raS * 10];
		byte command[] = { 'y', 's', 'u', 'a', 'c', 'q', 'r', '?' };
		byte comm[] = { ':', (byte) adr, '1', ':' };
		byte state[] = { ':', (byte) adr, 'q', '2', '3', '4', '5', '0', '0', ':' };
		for (int i = 0; i < array1.length;) {
			boolean isComm = Math.random() < 0.5 & raC > 0;
			isComm = !isComm & raS < 1 ? true : isComm;
			if (isComm) {
				raC--;
				comm[2] = command[(int) (Math.random() * command.length)];
				for (int j = 0; j < comm.length; j++, i++) {
					array1[i] = comm[j];
				}
			} else {
				raS--;
				for (int j = 0; j < state.length; j++, i++) {
					array1[i] = state[j];
				}
			}
		}
		writeBytes(array1);
		String data = "";
		for (byte element : array1) {
			data += " " + (char) element;// String.format("%02X ", element);
		}
		println("Out" + data);
	}
}
